-- Datasets: Northwind Traders Sales
-- Source: Microsoft (https://github.com/flrnciairn/SQL-Portfolio/blob/main/SQL%20Script%20for%20Northwind%20Traders)
-- Queried Using: MySQL

SELECT * FROM northwind.categories;
SELECT * FROM northwind.customers;
SELECT * FROM northwind.employees;
SELECT * FROM northwind.orderdetails;
SELECT * FROM northwind.orders;
SELECT * FROM northwind.products;
SELECT * FROM northwind.shippers;
SELECT * FROM northwind.suppliers;

-- How many orders were there in August 1996?
SELECT DISTINCT COUNT(OrderID) AS total_order
FROM northwind.orders
WHERE MONTH(OrderDate) = 8
	AND YEAR(OrderDate) = 1996;

-- What is the time span (in days) covered by the available data? Does it span one year?
SELECT DATEDIFF(MAX(OrderDate),MIN(OrderDate)) AS time_span_in_day
FROM northwind.orders;

-- How many transactions occurred in the fourth quarter of 1996?
SELECT COUNT(*) AS total_transaction_Q4
FROM northwind.orders
WHERE MONTH(OrderDate) BETWEEN 10 AND 12
	AND YEAR(OrderDate) = 1996;
    
-- What is the average sales per month in the year 1996?
SELECT 
	MONTH(orders.OrderDate) AS month_1996,
    AVG(orderdetails.quantity*products.price) AS monthly_average_sales
FROM northwind.orders
JOIN northwind.orderdetails ON orders.OrderID = orderdetails.OrderID
JOIN northwind.products ON orderdetails.ProductID = products.ProductID
WHERE YEAR(orders.OrderDate) = 1996
GROUP BY month_1996
ORDER BY month_1996 ASC;

-- Retrieve the full name of employees
SELECT
	FirstName,
	LastName,
    CONCAT_WS(' ', FirstName, LastName) AS full_name
FROM northwind.employees;

-- Retrieve the data of the oldest and youngest employee in Northwind
SELECT
    EmployeeID,
    CONCAT_WS(' ', FirstName, LastName) AS oldest_employee,
    CONCAT_WS(' ', MONTH(BirthDate), YEAR(BirthDate)) AS birth_date
FROM northwind.employees
WHERE BirthDate = (SELECT MIN(BirthDate) FROM northwind.employees);

SELECT
    EmployeeID,
    CONCAT_WS(' ', FirstName, LastName) AS youngest_employee,
    CONCAT_WS(' ', MONTH(BirthDate), YEAR(BirthDate)) AS birth_date
FROM northwind.employees
WHERE BirthDate = (SELECT MAX(BirthDate) FROM northwind.employees);

-- Who were the customers during that period?
SELECT DISTINCT
	customers.CustomerID,
    customers.CustomerName
FROM northwind.customers
JOIN northwind.orders ON customers.CustomerID = orders.CustomerID
WHERE MONTH(OrderDate) = 8
	AND YEAR(OrderDate) = 1996;
	
-- Who is the customer that orders the most during that period?
SELECT 
    customers.CustomerID, 
    customers.CustomerName, 
    SUM(orderdetails.Quantity) AS total_order
FROM northwind.customers
JOIN northwind.orders ON customers.CustomerID = orders.CustomerID
JOIN northwind.orderdetails ON orders.OrderID = orderdetails.OrderID
WHERE MONTH(orders.OrderDate) = 8
    AND YEAR(orders.OrderDate) = 1996
GROUP BY customers.CustomerID, customers.CustomerName
ORDER BY total_order DESC
LIMIT 1;

-- How many orders were made by the customer named 'QUICK-Stop' in September 1996?
SELECT COUNT(orders.OrderID) AS OrderCount
FROM northwind.customers
JOIN northwind.orders ON customers.CustomerID = orders.CustomerID
WHERE customers.CustomerName = 'QUICK-Stop'
    AND MONTH(orders.OrderDate) = 9
    AND YEAR(orders.OrderDate) = 1996;

-- What is the total sales amount generated from purchases by the customer named 'QUICK-Stop' from August to September 1996?
SELECT
	SUM(orderdetails.Quantity*products.price) AS total_sales
FROM northwind.customers
JOIN northwind.orders ON customers.CustomerID = orders.CustomerID
JOIN northwind.orderdetails ON orders.OrderID = orderdetails.OrderID
JOIN northwind.products ON orderdetails.ProductID = products. productID
WHERE customers.CustomerName = 'QUICK-stop'
	AND orders.OrderDATE BETWEEN '1996-08-01' AND '1996-09-30';

-- How is the trend of sales quantity in the fourth quarter of 1996?
SELECT
    MONTH(orders.OrderDate) AS 'month',
    SUM(orderdetails.Quantity*products.price) AS total_sales
FROM northwind.orders
JOIN northwind.orderdetails ON orders.OrderID = orderdetails.OrderID
JOIN northwind.products ON orderdetails.ProductID = products.ProductID

-- Create a query to retrieve the names of products with the category 'Condiments' using:

SELECT * FROM products;
SELECT * FROM categories;

-- 1. JOIN clause
SELECT
	products.ProductID,
    products.ProductName
FROM northwind.products
JOIN northwind.categories ON products.CategoryID = categories.CategoryID
WHERE categories.CategoryName = 'Condiments';

-- 2. Subsquery
SELECT
	p.ProductID,
    p.ProductName
FROM northwind.products AS p
JOIN northwind.categories c ON p.CategoryID = c.CategoryID
WHERE c.CategoryName = 'Condiments';

-- 3. CTE
WITH condiments AS (
	SELECT
		p.ProductID,
        p.ProductName
	FROM northwind.products AS p
    JOIN northwind.categories c ON p.CategoryID = c.CategoryID
    WHERE c.CategoryName = 'Condiments'
)
SELECT * FROM condiments;


WHERE orders.OrderDate BETWEEN '1996-10-01' AND '1996-12-31'
GROUP BY
    MONTH(orders.OrderDate), 
    YEAR(orders.OrderDate)
ORDER BY
    'month';

SELECT * FROM customers;

SELECT * FROM suppliers;

-- 1.Retrieve name of city from customers and suppliers using:
-- a. UNION ALL
SELECT customers.city
FROM northwind.customers
UNION ALL
SELECT suppliers.city
FROM northwind.suppliers;

-- b. UNION DISTINCT
SELECT customers.city
FROM northwind.customers
UNION DISTINCT
SELECT suppliers.city
FROM northwind.suppliers;

SELECT * FROM orders;
SELECT * FROM customers;

-- 2. Categorized customers according to total transaction. If more than once: "1", if less: '0'
SELECT CustomerName, COUNT(*) AS transaction_count,
		CASE WHEN COUNT(*) > 1 THEN 1
        ELSE 0
        END is_returning
 FROM customers c
 JOIN orders o ON c.CustomerID = o.CustomerID
 GROUP BY CustomerName;

-- 3. How many customers make repeat transactions?
WITH returning_customer AS (
	SELECT
		c.CustomerName,
        COUNT(*) AS transaction_count,
			CASE WHEN COUNT(*) > 1 THEN 1
            ELSE 0
            END AS is_returning
	FROM northwind.customers c
    JOIN northwind.orders o ON c.CustomerID = o.CustomerID
    GROUP BY c.CustomerName)
    
SELECT COUNT(*) AS transaction_count
FROM returning_customer
WHERE is_returning = 1;
